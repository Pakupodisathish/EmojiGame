{"version":3,"sources":["components/NavBar/index.js","components/EmojiCard/index.js","components/WinOrLoseCard/index.js","components/EmojiGame/index.js","App.js","index.js"],"names":["NavBar","props","score","topScore","isClicked","navBarClassName","_jsxs","className","concat","children","_jsx","src","alt","EmojiCard","emojiDetails","onClickEmoji","id","emojiName","emojiUrl","type","onClick","WinOrLoseCard","isWin","onClickPlayAgain","gameResult","finalScore","imgUrl","EmojiGame","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","state","previousClickedEmojiosList","isLose","includes","setState","prevState","_toConsumableArray","shuffledEmojisList","emojisList","sort","Math","random","_inherits","_createClass","key","value","_this2","_this$state","this","map","eachEmoji","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e38525b.chunk.js","sourcesContent":["// Write your code here.\nimport './index.css'\n\nconst NavBar = props => {\n  const {score, topScore, isClicked} = props\n  const navBarClassName = isClicked ? 'nav-bar-score' : ''\n  return (\n    <div className={`nav-bar ${navBarClassName}`}>\n      <div className=\"logo-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png\"\n          className=\"logo-img\"\n          alt=\"emoji logo\"\n        />\n        <h1 className=\"app-name\">Emoji Game</h1>\n      </div>\n      {!isClicked && (\n        <div className=\"score-container\">\n          <p className=\"score\">Score: {score}</p>\n          <p className=\"score\">Top Score: {topScore}</p>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default NavBar\n","// Write your code here.\nimport './index.css'\n\nconst EmojiCard = props => {\n  const {emojiDetails, onClickEmoji} = props\n  const {id, emojiName, emojiUrl} = emojiDetails\n  const clickedEmoji = () => {\n    onClickEmoji(id)\n  }\n  return (\n    <li className=\"emoji-card\">\n      <button\n        className=\"btn-img-container\"\n        type=\"button\"\n        onClick={clickedEmoji}\n      >\n        <img src={emojiUrl} alt={emojiName} className=\"emoji-img\" />\n      </button>\n    </li>\n  )\n}\nexport default EmojiCard\n","// Write your code here.\nimport './index.css'\n\nconst WinOrLoseCard = props => {\n  const {isWin, score, onClickPlayAgain} = props\n  const gameResult = isWin ? 'Won' : 'Lose'\n  const finalScore = isWin ? 'Best Score' : 'Score'\n  const imgUrl = isWin\n    ? 'https://assets.ccbp.in/frontend/react-js/won-game-img.png'\n    : 'https://assets.ccbp.in/frontend/react-js/lose-game-img.png'\n\n  const clickPlayAgain = () => {\n    onClickPlayAgain()\n  }\n\n  return (\n    <div className=\"win-or-lose-card\">\n      <img src={imgUrl} className=\"card-img\" alt=\"Win or Lose img\" />\n      <div className=\"card-content\">\n        <h1 className=\"game-result\">You {gameResult}</h1>\n        <p className=\"final-score\">{finalScore}</p>\n        <p className=\"total-scored\">{score}/12</p>\n        <button\n          className=\"play-again-btn\"\n          type=\"button\"\n          onClick={clickPlayAgain}\n        >\n          Play Again\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default WinOrLoseCard\n","/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\nimport {Component} from 'react'\n\nimport NavBar from '../NavBar'\n\nimport EmojiCard from '../EmojiCard'\n\nimport WinOrLoseCard from '../WinOrLoseCard'\n\nimport './index.css'\n\nclass EmojiGame extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    previousClickedEmojiosList: [],\n    isLose: false,\n  }\n\n  onClickEmoji = id => {\n    const {previousClickedEmojiosList} = this.state\n    if (previousClickedEmojiosList.includes(id)) {\n      this.setState(prevState => ({\n        isLose: !prevState.isLose,\n      }))\n    } else {\n      this.setState(prevState => ({\n        previousClickedEmojiosList: [\n          ...prevState.previousClickedEmojiosList,\n          id,\n        ],\n        score: prevState.score + 1,\n      }))\n    }\n  }\n\n  shuffledEmojisList = () => {\n    const {emojisList} = this.props\n    return emojisList.sort(() => Math.random() - 0.5)\n  }\n\n  onClickPlayAgain = () => {\n    const {isLose} = this.state\n    if (isLose) {\n      this.setState(prevState => ({\n        topScore:\n          prevState.topScore < prevState.score\n            ? prevState.score\n            : prevState.topScore,\n        score: 0,\n        previousClickedEmojiosList: [],\n        isLose: false,\n      }))\n    } else {\n      this.setState(prevState => ({\n        topScore:\n          prevState.topScore < prevState.score\n            ? prevState.score\n            : prevState.topScore,\n        score: 0,\n        previousClickedEmojiosList: [],\n      }))\n    }\n  }\n\n  render() {\n    const {score, topScore, isLose, previousClickedEmojiosList} = this.state\n    const {emojisList} = this.props\n    const shuffledEmojisList = this.shuffledEmojisList()\n    const isWin = previousClickedEmojiosList.length === emojisList.length\n    return (\n      <div>\n        <NavBar score={score} topScore={topScore} isClicked={isWin || isLose} />\n        <div className=\"game-display-container\">\n          {isWin || isLose ? (\n            <WinOrLoseCard\n              isWin={isWin}\n              score={score}\n              onClickPlayAgain={this.onClickPlayAgain}\n            />\n          ) : (\n            <ul className=\"emojis-cards-container\">\n              {shuffledEmojisList.map(eachEmoji => (\n                <EmojiCard\n                  emojiDetails={eachEmoji}\n                  key={eachEmoji.id}\n                  onClickEmoji={this.onClickEmoji}\n                />\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\nexport default EmojiGame\n","import EmojiGame from './components/EmojiGame'\n\nimport './App.css'\n\nconst emojisList = [\n  {\n    id: 0,\n    emojiName: 'Face with stuck out tongue',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-img.png',\n  },\n  {\n    id: 1,\n    emojiName: 'Face with head bandage',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-head-bandage-img.png',\n  },\n  {\n    id: 2,\n    emojiName: 'Face with hugs',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-hugs-img.png',\n  },\n  {\n    id: 3,\n    emojiName: 'Face with laughing',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-img.png',\n  },\n  {\n    id: 4,\n    emojiName: 'Laughing face with hand in front of mouth',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-with-hand-infront-mouth-img.png',\n  },\n  {\n    id: 5,\n    emojiName: 'Face with mask',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-mask-img.png',\n  },\n  {\n    id: 6,\n    emojiName: 'Face with silence',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-silence-img.png',\n  },\n  {\n    id: 7,\n    emojiName: 'Face with stuck out tongue and winked eye',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-and-winking-eye-img.png',\n  },\n  {\n    id: 8,\n    emojiName: 'Grinning face with sweat',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/grinning-face-with-sweat-img.png',\n  },\n  {\n    id: 9,\n    emojiName: 'Smiling face with heart eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-heart-eyes-img.png',\n  },\n  {\n    id: 10,\n    emojiName: 'Grinning face',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/grinning-face-img.png',\n  },\n  {\n    id: 11,\n    emojiName: 'Smiling face with star eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-star-eyes-img.png',\n  },\n]\n\nconst App = () => <EmojiGame emojisList={emojisList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}